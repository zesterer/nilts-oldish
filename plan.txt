#################################################
#################################################
##                                             ##
##  This is simply a personal plan for myself  ##
##  that helps me while I'm developing Nilts.  ##
##  It is by not by any means official and is  ##
##  usually inaccurate and incoherent. I dont  ##
##  recommend you trust anything it says, but  ##
##  read it if you so wish. It may give clues  ##
##  about features I plan on adding to Nilts.  ##
##                                             ##
#################################################
#################################################

Class Structure
===============

ns = namespace, cl = class, st = struct, ~ = property
[-] = not started, [P] = in progress, [F] = finished

[P] ns Nilts
[P] 	ns Common
[F] 		st State
[F] 			~ Matrix4x4
[F] 			~ Position
[F] 			~ Orientation
[F] 			~ Scale
[F] 			~ Velocity
[F] 			~ Spin
[F] 			~ Mass
[F] 			~ CentreOfMass
[P] 	ns Core
[P] 		cl Application
[P] 			~ Running
[P] 			~ Args
[F] 		cl Window
[F] 			~ InputManager
[F] 		cl Client
[F] 			~ GameManager
[F] 	ns Engine
[F] 		cl Voxel
[F] 			~ Density
[F] 			~ Type
[F] 			~ Data
[F] 		cl VoxelField
[F] 			~ Voxel []
[F] 		cl VoxelClusterChild : VoxelField
[F] 			~ VoxelCluster
[F] 			~ Position
[F] 		cl VoxelCluster
[F] 			~ VoxelField []
[F] 		cl Entity
[F] 			~ Id
[F] 			~ Type
[F] 			~ State
[F] 		cl VoxelEntity : VoxelField, Entity
[F] 		cl VoxelTerrain : VoxelCluster, Entity
[F] 		cl Particle : Entity
[F] 			~ Lifetime
[F] 		cl Realm
[F] 			cl VoxelTerrain
[F] 			cl Entity []
[F] 	ns Game
[F] 		cl GameManager
[F] 			~ Realm
[F] 			~ Simulator
[F] 			~ Actor []
[F] 			~ InputManager
[F] 		cl Actor
[F] 			~ Properties
[F] 			~ Entity
[F] 		cl Character : Actor
[F] 			~ has_ai
[F] 		cl Player : Character
[F] 	ns Macro
[F] 		cl Region
[F] 			~ Properties
[F] 		cl Simulator
[F] 			~ Region []
[F] 			~ State
[P] 	ns Render
[F] 		ns Structures
[F] 			st Vertex
[F] 				~ Position
[F] 				~ Colour
[F] 				~ Normal
[F] 			st Polygon
[F] 				~ Vertex
[F] 				~ Vertex
[F] 				~ Vertex
[F] 			cl Mesh
[F] 				~ buffered
[F] 				~ Polygon []
[F] 				~ gl_id
[F] 				~ draw_mode
[F] 			st Light
[F] 				~ Type
[F] 				~ Position
[F] 				~ Colour
[F] 				~ Ambiance
[F] 			st Material
[F] 				~ Shininess
[F] 				~ SpecularVolume
[F] 				~ SpecularCap
[F] 				~ Effects
[F] 			st Shader
[F] 				~ gl_id
[-] 		cl EntityHandler
[-] 			~ Id
[-] 			~ Entity
[-] 			~ Mesh
[-] 		cl ParticleEntityHandler : EntityHandler
[-] 		cl VoxelEntityHandler : EntityHandler
[-] 		cl TerrainHandler
[-] 			~ VoxelTerrain
[-] 			~ VoxelMesh []
[-] 		cl SceneManager
[-] 			~ Realm
[-] 			~ TerrainHandler
[-] 			~ EntityHandler []
[-] 		cl Scene
[-] 			~ SceneManager
		

The 'Macro'
===========

Procedural Stuff
================
